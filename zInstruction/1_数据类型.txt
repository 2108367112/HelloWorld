1、基本数据类型：
1、int, short ,long ,long long ,bool ,char ,float 和 double
2 、数据类型的修饰符：unsigned ,signed (无符号 和 有符号)
3 、每种 数据类型 在内存中占用的最少字节数。如何计算每种数据类型占用多少字节？？例如：sizeof(int)

由于C++和硬件平台关联较大，规范没办法像Java那样严格规定每种数据类型所需的字节数，所以它只定义了每种数据类型最少需要多少字节。
比如，规范要求一个int型整数至少占据2个字节（不过，绝大部分情况下一个int整数将占据4个字节）。

C++定义了sizeof操作符，通过这个操作符可以得到每种数据类型（或某个变量）占据的字节个数。

对于浮点数，规范只要求最小的有效数字个数。对于单精度浮点数float而言，要求最少支持6个有效数字。对于双精度浮点数double类型而言，
要求最少支持10个有效数字。

2、指针、引用和void

现在来看C++里另外三种常用的数据类型：指针、引用和void，如图3所示

2.1 指针类型的书写格式为T *，其中T为某种数据类型。
2.2 引用类型的书写格式为T &，其中T为某种数据类型。
2.3 void代表空类型，也就是无类型。这种类型只能用于定义指针变量，比如void*。当我们确实不关注内存中存储的数据到底是什么类型的话，
就可以定义一个void*类型的指针来指向这块内存。
2.4 C++11开始，空指针由新关键字nullptr[④]表示，类似于Java中的null。

如何理解指针、引用、void ？？是把它们理解成数据类型，还是变量？？

答：数据类型。通常会说，指针变量，引用变量。我们会认为它应该是变量。确切的说，我们应该说：指针类型的变量。引用类型的变量。

例如：int *userID=0x10; 其中：变量是:userID,而int 是指针指向的数据类型。

关于指针：

指针的类型。
指针的赋值。
指针的解引用。

简单点说，指针就是内存地址